apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}
  labels:
    app: {{ template "name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  template:
    metadata:
      labels:
        app: {{ template "name" . }}
        release: {{ .Release.Name }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{ if .Values.jupyter.password }}
          command: ["start-notebook.sh", "--NotebookApp.password={{ .Values.jupyter.password }}"]
          {{ end }}
          ports:
            - containerPort: {{ .Values.service.internalPort }}
          livenessProbe:
            httpGet:
              path: /
              port: {{ .Values.service.internalPort }}
          readinessProbe:
            httpGet:
              path: /
              port: {{ .Values.service.internalPort }}
          resources:
{{ toYaml .Values.resources | indent 12 }}
          volumeMounts:
            - mountPath: {{ .Values.jupyter.repositoriesPath }}
              name: {{ .Values.jupyter.repositoriesDbDisk }}
              readOnly: true
            - mountPath: {{ .Values.jupyter.userPath }}
              name: {{ .Values.jupyter.userDbDisk }}

    # to ease the pain of writing this, especially from terraform
    {{- if .Values.hostnameNodeSelector }}
      nodeSelector:
        kubernetes.io/hostname: {{ .Values.hostnameNodeSelector }}
    {{- end }}
    {{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
    {{- end }}
      volumes:
        - name: {{ required "Repositories disk name is missing" .Values.jupyter.repositoriesDbDisk }}
          gcePersistentDisk:
            pdName: {{ .Values.jupyter.repositoriesDbDisk }}
            fsType: ext4
            readOnly: true
        - name: {{ required "User disk name is missing" .Values.jupyter.userDbDisk }}
          gcePersistentDisk:
            pdName: {{ .Values.jupyter.userDbDisk }}
            fsType: ext4
