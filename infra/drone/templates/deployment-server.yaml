apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}-server
  labels:
    app: {{ template "fullname" . }}-server
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: {{ template "fullname" . }}-server
        release: "{{ .Release.Name }}"
        heritage: "{{ .Release.Service }}"
    spec:
      containers:
      - name: {{ template "fullname" . }}-server
        image: "{{ .Values.image.registry }}/{{ .Values.image.org }}/{{ .Values.image.name }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        env:
          - name: DRONE_HOST
{{ if .Values.ingress.tls }}
            value: "https://{{ .Values.ingress.hostname }}"
{{ else }}
            value: "http://{{ .Values.ingress.hostname }}"
{{ end }}
          - name: DRONE_ADMIN
            value: {{ required "Admin user list is missing" .Values.server.admins | quote }}
          - name: DRONE_SECRET
            valueFrom:
              secretKeyRef:
                name: {{ template "fullname" . }}
                key: drone_secret
          - name: DRONE_GITHUB_CLIENT
            valueFrom:
              secretKeyRef:
                name: {{ template "fullname" . }}
                key: github_client
          - name: DRONE_GITHUB_SECRET
            valueFrom:
              secretKeyRef:
                name: {{ template "fullname" . }}
                key: github_secret
          - name: DRONE_ORGS
            value: {{ required "Github organization list is missing" .Values.server.github_orgs | quote }}
          {{ range $key, $value := .Values.server.env }}
          - name: {{ $key }}
            value: {{ $value | quote }}
          {{ end }}
        ports:
        - name: http
          containerPort: {{ .Values.service.http.internalPort }}
        readinessProbe:
          httpGet:
            path: /
            port: http
        resources:
{{ toYaml .Values.server.resources | indent 10 }}
        volumeMounts:
        - mountPath: {{ .Values.server.db_path }}
          name: {{ .Values.server.db_disk }}
      volumes:
      - name: {{ required "External disk name is missing" .Values.server.db_disk }}
        gcePersistentDisk:
          pdName: {{ .Values.server.db_disk }}
          fsType: ext4
    {{- with .Values.server.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
