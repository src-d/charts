{{- $secretName := default (include "fullname" .) .Values.secretName -}}

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}
  labels:
    app: {{ template "name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  template:
    metadata:
      labels:
        app: {{ template "name" . }}
        release: {{ .Release.Name }}
    spec:
      volumes:
        - name: "internal-database"
          persistentVolumeClaim:
            claimName: {{ template "fullname" . }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ required "Image tag is required" .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: CAT_OAUTH_RESTRICT_ACCESS
              value: "{{ .Values.authorization.restrictAccessGroup }}"
            - name: CAT_OAUTH_RESTRICT_REQUESTER_ACCESS
              value: "{{ .Values.authorization.restrictRequesterGroup }}"
            - name: CAT_SERVER_URL
              value: "//{{ .Values.ingress.hostname }}"
            - name: CAT_DB_CONNECTION
              value: "sqlite://{{ .Values.deployment.internalDatabasePath }}/internal.db"
            - name: CAT_OAUTH_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: {{ $secretName  }}
                  key: github_client
            - name: CAT_OAUTH_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ $secretName  }}
                  key: github_secret
            - name: CAT_JWT_SIGNING_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ $secretName  }}
                  key: jwt_signing_key
            - name: CAT_GA_TRACKING_ID
              value: "{{ required "gaTrackingID is required" .Values.deployment.gaTrackingID }}"
          ports:
            - containerPort: {{ .Values.service.codeAnnotation.internalPort }}
          volumeMounts:
            - name: internal-database
              mountPath: {{ .Values.deployment.internalDatabasePath }}
          livenessProbe:
            httpGet:
              path: /
              port: {{ .Values.service.codeAnnotation.internalPort }}
          readinessProbe:
            httpGet:
              path: /
              port: {{ .Values.service.codeAnnotation.internalPort }}
          resources:
{{ toYaml .Values.resources | indent 12 }}
    {{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
    {{- end }}
