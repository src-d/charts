apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "lookout-style-analyzer.fullname" . }}
  labels:
    app: {{ template "lookout-style-analyzer.name" . }}
    chart: {{ template "lookout-style-analyzer.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "lookout-style-analyzer.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "lookout-style-analyzer.name" . }}
        release: {{ .Release.Name }}
    spec:
      volumes:
        - name: data
          {{- if .Values.app.volume.hostPath }}
          hostPath:
            path: {{ .Values.app.volume.hostPath }}
          {{- else }}
          persistentVolumeClaim:
            claimName: {{ required "missing app.volume.pvcName" .Values.app.volume.pvcName }}
          {{- end }}
        {{- if .Values.databases.postgres.cloudSQL }}
        - name: cloudsql-instance-credentials
          secret:
            secretName: {{ required "missing databases.postgres.serviceAccountSecret" .Values.databases.postgres.serviceAccountSecret }}
        {{- end }}
      containers:
      {{- if .Values.databases.postgres.cloudSQL }}
        - name: cloudsql-proxy
          image: gcr.io/cloudsql-docker/gce-proxy:1.11
          command: ["/cloud_sql_proxy",
                    "-instances={{ required "missing databases.postgres.instanceConnectionName" .Values.databases.postgres.instanceConnectionName }}=tcp:5432",
                    "-credential_file=/secrets/cloudsql/credentials.json"]
          securityContext:
            runAsUser: 2  # non-root user
            allowPrivilegeEscalation: false
          volumeMounts:
            - name: cloudsql-instance-credentials
              mountPath: /secrets/cloudsql
              readOnly: true
      {{- end }}
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
            - --log-level
            - {{ .Values.app.log.level | upper }}
            {{- if .Values.app.log.structured }}
            - --log-structured
            {{- end }}
            - run
            - lookout.style.format
            - --server
            - 0.0.0.0:{{ .Values.app.port }}
            - --request-server
            - {{ required "Missing app.requestServer" .Values.app.requestServer }}
            - --db
            - $(LOOKOUT_DB)
            - --fs
            - /tmp/models
            {{- if .Values.app.workers }}
            - --workers
            - {{ .Values.app.workers }}
            {{- end }}
          env:
            - name: MODELFORGE_VENDOR
              value: "{{ default "source{d}" .Values.app.modelforgeVendor }}"
            - name: LOOKOUT_DB
              {{- if .Values.databases.postgres.cloudSQL }}
              valueFrom:
                secretKeyRef:
                  name: {{ required "Missing databases.postgres.connectionDetailsSecret" .Values.databases.postgres.connectionDetailsSecret }}
                  key: LOOKOUT_DB
              {{- else }}
              value: {{ required "missing databases.postgres.dbConnectionString" .Values.databases.postgres.dbConnectionString }}
              {{- end }}
          volumeMounts:
            - name: data
              mountPath: /tmp/models
          ports:
            - containerPort: {{ .Values.app.port }}
              protocol: TCP
          # TODO: We should have proper app probes
          livenessProbe:
            tcpSocket:
              port: {{ .Values.app.port }}
          readinessProbe:
            tcpSocket:
              port: {{ .Values.app.port }}
          resources:
{{ toYaml .Values.resources | indent 12 }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
