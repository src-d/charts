sudo: required
# We need the systemd for the kubeadm and it's default from 16.04+
dist: xenial
services:
- docker
language: go
go:
- "1.12.x"

stages:
  - name: repo-sync
    if: branch = master AND type = push

jobs:
  include:
    - name: Lint charts
      stage: lint
      env:
        - CT_VERSION=2.3.3
        - HELM_VERSION=v2.14.0
      before_script:
        - sudo pip install yamale yamllint
        - curl https://raw.githubusercontent.com/kubernetes/helm/master/scripts/get > get_helm.sh
        - chmod 700 get_helm.sh
        - DESIRED_VERSION=$HELM_VERSION ./get_helm.sh
        - curl -Lo chart-testing_${CT_VERSION}_linux_amd64.tar.gz https://github.com/helm/chart-testing/releases/download/v${CT_VERSION}/chart-testing_${CT_VERSION}_linux_amd64.tar.gz
        - tar xzf chart-testing_${CT_VERSION}_linux_amd64.tar.gz
        - sudo chmod +x ct && sudo mv ct /usr/local/bin/
        - sudo mv etc /etc/ct
        - rm -f chart-testing_${CT_VERSION}_linux_amd64.tar.gz
      script:
        - cd .. # ct is having issues when processing charts on the root
        - ct lint --all --config charts/ct.yaml # --all is being used as our project structure doesn't allow propper git change detection
    - name: Tests
      stage: Tests
      env:
        - CHANGE_MINIKUBE_NONE_USER=true # makes sure config files are owned by the travis user
        - KUBERNETES_VERSION=v1.14.0
        - CT_VERSION=2.3.3
        - HELM_VERSION=v2.14.0
      install:
        - sudo apt-get update
        - sudo apt-get install -y socat
      before_script:
        - curl -Lo kubectl https://storage.googleapis.com/kubernetes-release/release/${KUBERNETES_VERSION}/bin/linux/amd64/kubectl
        - sudo chmod +x kubectl && sudo mv kubectl /usr/local/bin/
        - curl -Lo minikube https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64 
        - sudo chmod +x minikube && sudo mv minikube /usr/local/bin/
        - sudo minikube start --vm-driver=none --kubernetes-version=${KUBERNETES_VERSION}
        - sudo chown -R travis /home/travis/.minikube/
        - minikube update-context
        # wait till node is ready
        - JSONPATH='{range .items[*]}{@.metadata.name}:{range @.status.conditions[*]}{@.type}={@.status};{end}{end}'; until kubectl get nodes -o jsonpath="$JSONPATH" 2>&1 | grep -q "Ready=True"; do sleep 1; done
        - curl https://raw.githubusercontent.com/kubernetes/helm/master/scripts/get > get_helm.sh
        - chmod 700 get_helm.sh
        - DESIRED_VERSION=$HELM_VERSION ./get_helm.sh
        - curl -Lo chart-testing_${CT_VERSION}_linux_amd64.tar.gz https://github.com/helm/chart-testing/releases/download/v${CT_VERSION}/chart-testing_${CT_VERSION}_linux_amd64.tar.gz
        - tar xzf chart-testing_${CT_VERSION}_linux_amd64.tar.gz
        - sudo chmod +x ct && sudo mv ct /usr/local/bin/
        - sudo mv etc /etc/ct
        - rm -f chart-testing_${CT_VERSION}_linux_amd64.tar.gz
      script:
        - helm init
        # wait till the tiller is ready
        - JSONPATH='{range .items[*]}{@.metadata.name}:{range @.status.conditions[*]}{@.type}={@.status};{end}{end}'; until kubectl get pods -n kube-system -l name=tiller -o jsonpath="$JSONPATH" 2>&1 | grep -q "Ready=True"; do sleep 1; done
        - cd .. # ct is having issues when processing charts on the root
        - ct install --all --config charts/ct-install.yaml # --all is being used as our project structure doesn't allow propper git change detection
    - name: Repo sync
      stage: repo-sync
      install:
        - curl https://raw.githubusercontent.com/kubernetes/helm/master/scripts/get > get_helm.sh
        - chmod 700 get_helm.sh
        - DESIRED_VERSION=v2.9.1 ./get_helm.sh
      script:
        - ./scripts/repo-sync.sh
